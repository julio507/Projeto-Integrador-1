package com.yard.stockmanager.persistence.entity;
// Generated 20/10/2019 19:04:16 by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * EstoqueHasProduto generated by hbm2java
 */
@Entity
@Table(name="estoque_has_produto"
    ,catalog="stockmanager"
)
public class EstoqueHasProduto  implements java.io.Serializable {


     private EstoqueHasProdutoId id;
     private Estoque estoque;
     private Insercao insercao;
     private Produto produto;
     private double quantidade;
    private double valorunitario;
     private char ativo;

    public EstoqueHasProduto() {
    }

    public EstoqueHasProduto(EstoqueHasProdutoId id, Estoque estoque, Insercao insercao, Produto produto, double quantidade,double valorunitario, char ativo) {
       this.id = id;
       this.estoque = estoque;
       this.insercao = insercao;
       this.produto = produto;
       this.quantidade = quantidade;
       this.valorunitario = valorunitario;
       this.ativo = ativo;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="insercaoId", column=@Column(name="insercao_id", nullable=false) ), 
        @AttributeOverride(name="estoqueId", column=@Column(name="Estoque_id", nullable=false) ), 
        @AttributeOverride(name="produtoId", column=@Column(name="produto_id", nullable=false) ) } )
    public EstoqueHasProdutoId getId() {
        return this.id;
    }
    
    public void setId(EstoqueHasProdutoId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Estoque_id", nullable=false, insertable=false, updatable=false)
    public Estoque getEstoque() {
        return this.estoque;
    }
    
    public void setEstoque(Estoque estoque) {
        this.estoque = estoque;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="insercao_id", nullable=false, insertable=false, updatable=false)
    public Insercao getInsercao() {
        return this.insercao;
    }
    
    public void setInsercao(Insercao insercao) {
        this.insercao = insercao;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="produto_id", nullable=false, insertable=false, updatable=false)
    public Produto getProduto() {
        return this.produto;
    }
    
    public void setProduto(Produto produto) {
        this.produto = produto;
    }

    
    @Column(name="quantidade", nullable=false, precision=22, scale=0)
    public double getQuantidade() {
        return this.quantidade;
    }
    
    public void setQuantidade(double quantidade) {
        this.quantidade = quantidade;
    }

    @Column(name="valorunitario", nullable=false, precision=22, scale=0)
    public double getValorunitario() {
        return this.valorunitario;
    }

    public void setValorunitario(double valorunitario) {
        this.valorunitario = valorunitario;
    }

    @Column(name="ativo", nullable=false, length=1)
    public char getAtivo() {
        return this.ativo;
    }
    
    public void setAtivo(char ativo) {
        this.ativo = ativo;
    }




}



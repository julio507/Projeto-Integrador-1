package com.yard.stockmanager.persistence.entity;
// Generated 20/10/2019 19:04:16 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Produto generated by hbm2java
 */
@Entity
@Table(name="produto"
    ,catalog="stockmanager"
)
public class Produto  implements java.io.Serializable {


     private int id;
     private Categoria categoria;
     private Departamento departamento;
     private Marca marca;
     private Unidade unidade;
     private String nome;
     private String descricao;
     private String quantidade;
     private BigDecimal custounitario;
     private char ativo;
     private Set<NfeHasProduto> nfeHasProdutos = new HashSet<NfeHasProduto>(0);
     private Set<EstoqueHasProduto> estoqueHasProdutos = new HashSet<EstoqueHasProduto>(0);

    public Produto() {
    }

	
    public Produto(int id, Categoria categoria, Departamento departamento, Marca marca, Unidade unidade, String nome, String descricao, String quantidade, BigDecimal custounitario, char ativo) {
        this.id = id;
        this.categoria = categoria;
        this.departamento = departamento;
        this.marca = marca;
        this.unidade = unidade;
        this.nome = nome;
        this.descricao = descricao;
        this.quantidade = quantidade;
        this.custounitario = custounitario;
        this.ativo = ativo;
    }
    public Produto(int id, Categoria categoria, Departamento departamento, Marca marca, Unidade unidade, String nome, String descricao, String quantidade, BigDecimal custounitario, char ativo, Set<NfeHasProduto> nfeHasProdutos, Set<EstoqueHasProduto> estoqueHasProdutos) {
       this.id = id;
       this.categoria = categoria;
       this.departamento = departamento;
       this.marca = marca;
       this.unidade = unidade;
       this.nome = nome;
       this.descricao = descricao;
       this.quantidade = quantidade;
       this.custounitario = custounitario;
       this.ativo = ativo;
       this.nfeHasProdutos = nfeHasProdutos;
       this.estoqueHasProdutos = estoqueHasProdutos;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="categoria_id", nullable=false)
    public Categoria getCategoria() {
        return this.categoria;
    }
    
    public void setCategoria(Categoria categoria) {
        this.categoria = categoria;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="departamento_id", nullable=false)
    public Departamento getDepartamento() {
        return this.departamento;
    }
    
    public void setDepartamento(Departamento departamento) {
        this.departamento = departamento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="marca_id", nullable=false)
    public Marca getMarca() {
        return this.marca;
    }
    
    public void setMarca(Marca marca) {
        this.marca = marca;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="unidade_id", nullable=false)
    public Unidade getUnidade() {
        return this.unidade;
    }
    
    public void setUnidade(Unidade unidade) {
        this.unidade = unidade;
    }

    
    @Column(name="nome", nullable=false, length=45)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    
    @Column(name="descricao", nullable=false, length=45)
    public String getDescricao() {
        return this.descricao;
    }
    
    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    
    @Column(name="quantidade", nullable=false, length=45)
    public String getQuantidade() {
        return this.quantidade;
    }
    
    public void setQuantidade(String quantidade) {
        this.quantidade = quantidade;
    }

    
    @Column(name="custounitario", nullable=false, precision=11)
    public BigDecimal getCustounitario() {
        return this.custounitario;
    }
    
    public void setCustounitario(BigDecimal custounitario) {
        this.custounitario = custounitario;
    }

    
    @Column(name="ativo", nullable=false, length=1)
    public char getAtivo() {
        return this.ativo;
    }
    
    public void setAtivo(char ativo) {
        this.ativo = ativo;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="produto")
    public Set<NfeHasProduto> getNfeHasProdutos() {
        return this.nfeHasProdutos;
    }
    
    public void setNfeHasProdutos(Set<NfeHasProduto> nfeHasProdutos) {
        this.nfeHasProdutos = nfeHasProdutos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="produto")
    public Set<EstoqueHasProduto> getEstoqueHasProdutos() {
        return this.estoqueHasProdutos;
    }
    
    public void setEstoqueHasProdutos(Set<EstoqueHasProduto> estoqueHasProdutos) {
        this.estoqueHasProdutos = estoqueHasProdutos;
    }




}


